{"version":3,"sources":["js/countdown-timer.js","index.js"],"names":["CountdownTimer","selector","targetDate","document","querySelector","timer","setInterval","deltaTime","Date","now","currentTime","getTimeComponents","updateTimer","time","days","Math","floor","hours","zeroPlacer","mins","secs","value","String","padStart","textContent"],"mappings":";;;AAyCC,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAxCoBA,IAAAA,EAAAA,WAGmB,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BA,KAAAA,WAAaA,EACbD,KAAAA,SAAWE,SAASC,cAAcH,GAElCI,KAAAA,QAiCR,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA7BS,MAAA,WAAA,IAAA,EAAA,KACNC,YAAY,WACJC,IAAAA,EAAY,EAAKL,WAAaM,KAAKC,MACnCC,EAAc,EAAKC,kBAAkBJ,GAE3C,EAAKK,YAAYF,IAChB,OAuBN,CAAA,IAAA,oBApBmBG,MAAAA,SAAAA,GAMT,MAAA,CAAEC,KALKC,KAAKC,MAAMH,EAAQ,OAKlBI,MAJD,KAAKC,WAAWH,KAAKC,MAAOH,EAAQ,MAAyB,OAIrDM,KAHT,KAAKD,WAAWH,KAAKC,MAAOH,EAAQ,KAAoB,MAGzCO,KAFf,KAAKF,WAAWH,KAAKC,MAAOH,EAAQ,IAAc,SAgBlE,CAAA,IAAA,aAVYQ,MAAAA,SAAAA,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OASpC,CAAA,IAAA,cAN0C,MAAA,SAAA,GAA3BT,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOE,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC1BnB,KAAAA,SAASG,cAAc,2BAA2BoB,YAAiBV,GAAAA,OAAAA,GACnEb,KAAAA,SAASG,cAAc,4BAA4BoB,YAAiBP,GAAAA,OAAAA,GACpEhB,KAAAA,SAASG,cAAc,2BAA2BoB,YAAiBL,GAAAA,OAAAA,GACnElB,KAAAA,SAASG,cAAc,2BAA2BoB,YAAiBJ,GAAAA,OAAAA,OAE3E,EAxCoBpB,GAwCpB,QAAA,QAAA;;ACtCD,aAHA,QAAA,6BACA,IAAA,EAAA,EAAA,QAAA,yBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAIA,EAAJ,QAAmB,CACjBC,SAAU,WACVC,WAAY,IAAIM,KAAK","file":"src.d94b0838.js","sourceRoot":"..\\src","sourcesContent":["// countdown timer plugin\r\nexport default class CountdownTimer {\r\n  // selector - id or class of html element for counter \r\n  // targetDate - date for counter to finish coundown\r\n  constructor({ selector, targetDate }) {\r\n    this.targetDate = targetDate;\r\n    this.selector = document.querySelector(selector);\r\n\r\n    this.timer();\r\n  }\r\n\r\n  // update timer\r\n  timer() { \r\n    setInterval(() => {      \r\n      const deltaTime = this.targetDate - Date.now();\r\n      const currentTime = this.getTimeComponents(deltaTime);\r\n\r\n      this.updateTimer(currentTime);\r\n    }, 1000);\r\n  }\r\n  \r\n  getTimeComponents(time) {\r\n    const days = (Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.zeroPlacer(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.zeroPlacer(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.zeroPlacer(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n\r\n  // put '0' before if single number in counter\r\n  zeroPlacer(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n\r\n  updateTimer({ days, hours, mins, secs }) {\r\n    this.selector.querySelector('span[data-value=\"days\"]').textContent = `${days}`;\r\n    this.selector.querySelector('span[data-value=\"hours\"]').textContent = `${hours}`;\r\n    this.selector.querySelector('span[data-value=\"mins\"]').textContent = `${mins}`;\r\n    this.selector.querySelector('span[data-value=\"secs\"]').textContent = `${secs}`;\r\n  };\r\n};\r\n","import './css/countdown-timer.css';\r\nimport CountdownTimer from './js/countdown-timer';\r\n\r\nnew CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Dec 31, 2020'),\r\n});\r\n"]}